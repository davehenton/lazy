task wrapper(type: Wrapper) {
    gradleVersion = '3.3'
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

group = 'com.thejohnfreeman'
// Update version in README too.
version = '0.3.0'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.guava:guava:19.0'
    testCompile 'junit:junit:4.12'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from tasks.javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

checkstyle {
    toolVersion = '7.5'
    config = resources.text.fromFile('.checkstyle.xml')
}

test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
    required System.env.TRAVIS != "true"
}

// To release a new version:
// 1. Bump the version number in both build.gradle and README.md
// 2. Commit the changes
// 3. Tag the commit with the version number, prefixed with "v", e.g. "v1.0.0"
// 4. Run `gradle uploadArchives`
// 5. Follow the instructions at http://central.sonatype.org/pages/releasing-the-deployment.html
// 6. Log into https://oss.sonatype.org/
// 7. Navigate to the left hand side -> Build Promotion -> Staging Repositories
// 8. In the top right, search for the group name ("com.thejohnfreeman")
// 9. Select the staging repository
// 10. Above the list of staging repositories, click Close
// 11. Next to Close, click Refresh until the operation finishes
// 12. Next to Close, click Release
uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment {
                MavenDeployment deployment -> signing.signPom(deployment)
            }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'lazy'
                packaging 'jar'
                description 'A library for type-safe, tractable lazy evaluation and late binding in Java.'
                url 'https://github.com/thejohnfreeman/lazy'

                scm {
                    connection 'https://github.com/thejohnfreeman/lazy.git'
                    url 'https://github.com/thejohnfreeman/lazy'
                }

                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'https://github.com/thejohnfreeman/lazy/blob/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'thejohnfreeman'
                        name 'John Freeman'
                        email 'jfreeman08@gmail.com'
                    }
                }
            }
        }
    }
}
